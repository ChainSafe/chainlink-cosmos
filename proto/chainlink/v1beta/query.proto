syntax = "proto3";
package chainlink.v1beta;

import "cosmos/base/query/v1beta1/pagination.proto";
import "chainlink/v1beta/tx.proto";
import "google/api/annotations.proto";
import "chainlink/v1beta/genesis.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/ChainSafe/chainlink-cosmos/x/chainlink/types";

// Query defines the gRPC querier service.
service Query {
  rpc GetRoundData(GetRoundDataRequest) returns (GetRoundDataResponse) {
    option (google.api.http).get = "/chainlink/feed/data/round/{roundId}/{feedId}";
  }
  rpc LatestRoundData(GetLatestRoundDataRequest) returns (GetLatestRoundDataResponse) {
    option (google.api.http).get = "/chainlink/feed/data/latest/{feedId}";
  }
  rpc GetAllModuleOwner(GetModuleOwnerRequest) returns (GetModuleOwnerResponse) {
    option (google.api.http).get = "/chainlink/module/owner";
  }
  rpc GetFeedByFeedId(GetFeedByIdRequest) returns (GetFeedByIdResponse) {
    option (google.api.http).get = "/chainlink/module/feed/{feedId}";
  }
  rpc GetAccountInfo(GetAccountRequest) returns (GetAccountResponse) {
    option (google.api.http).get = "/chainlink/module/account/{accountAddress}";
  }
  rpc GetFeedRewardAvailStrategy(GetFeedRewardAvailStrategiesRequest) returns (GetFeedRewardAvailStrategiesResponse) {
    option (google.api.http).get = "/chainlink/module/feed/reward/strategy";
  }
}

message GetFeedByIdRequest {
  string feedId = 1;
}

message GetFeedByIdResponse{
  MsgFeed feed = 1;
}

message GetModuleOwnerRequest {
}

message GetModuleOwnerResponse {
  repeated MsgModuleOwner moduleOwner = 1;
}

message GetRoundDataRequest {
  string feedId = 1;
  uint64 roundId = 2;
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

message GetRoundDataResponse {
  repeated RoundData roundData = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message GetLatestRoundDataRequest {
  string feedId = 1;
}

message GetLatestRoundDataResponse {
  repeated RoundData roundData = 1;
}

message RoundData {
  string feedId = 1;
  OffChainReport feedData = 2;
}

message GetAccountRequest {
  bytes accountAddress = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

message GetAccountResponse {
  MsgAccount account = 1;
}
message GetFeedRewardAvailStrategiesRequest {
}

message GetFeedRewardAvailStrategiesResponse {
  repeated string availStrategies = 1;
}
